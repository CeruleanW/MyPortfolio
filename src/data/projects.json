{
  "projects": [
    {
      "title": "Plant Light Meter (placeholder)",
      "subtitle": "A mobile app measures the light intensity to help you find the appropriate location for your indoor plants",
      "image": "plm.png",
      "techs": ["React Native", "Java (Android)", "MongoDB Realm", "Agile/Scrum", "Highcharts"],
      "id": "365dc79d-45eb-48d1-ad2c-33023b029a33",
      "type": "Work Project",
      "repo": "https://github.com/CeruleanW/plant-light-meter",
      "content": {
        "introduction": "People get depressed without enough sunlight, so does a plant. With the help of Plant Light Meter, you can measure the illuminance value, collect records for multipel locations, get an estimation for the daily light level. You will find the land of promised sunshine for your plants. There are many light meter apps can measure the light, but this App enables users keep track of all the records it stored. It's not only a light meter, but a indoor plant management helper.",
        "goal": "Let the user get the daily light intensity level and determine if it is a suitable location for indoor planting",
        "spotlight": "I built the Minimal Viable Product from scratch in 3 weeks, without any prior technology knowledge in Mobile Development",
        "problem": ["No available good library in React Native to get light intensity data from the mobile phone. To find a solution for reading required data, I did research about the camera API, ambient light sensor API and tried to use a unpopular library but didn't work. No other simple React Native solution was found. Therefore, I create a native module in the Android source code in Java and successfully get readings from the ambient light sensor", "Troubleshooting for build failures was quite time consuming. Without much knowledge of Android development and Gradle, I usually copy & google the error message, then try the suggestions one by one. After many times trials for different issues, I noticed that a default action could be uninstalling previous version and clean build cache. If it doesn't work, investigate the stack trace and hypothesize potential causes for the failure and try to test those hypotheses will reduce the number and time of trials."],
        "lesson": ["Being cautious before commit to a new framework/library. In case of JavaScript packages, use npmtrends.com to find statistic data and alternatives beforehand", "Understand theories and stack trace is critical for troubleshooting"]
      },
      "illustrations": ["plm03.gif", "plm02.png", "plm01.png"]
    },
    {
      "title": "Google Photos Search Enhancer",
      "subtitle": "Search phrases more than general keywords in the descriptions and filenames in your Google Photos. Support fuzzy search",
      "image": "gpse.png",
      "techs": ["React.js", "RESTful API", "Material UI", "Webpack", "IndexedDB", "Fuse.js"],
      "id": "0c6d7ee9-fbca-477f-8f0d-2f1eb50963f0",
      "type": "Personal Project",
      "live": "https://ceruleanw.github.io/google-photos-search-enhancer/",
      "repo": "https://github.com/CeruleanW/google-photos-search-enhancer",
      "content": {
        "introduction": "Google Photos Search Enhancer is an application which requests data from Google Photos API, stores them in the client-end storage and search through it. This project improves my skills of dealing with REST APIs, Asynchronous JavaScript (AJAX) and React.js.",
        "goal": "As a Google Photos user, I expect to find my photos once I put a special filename on the photo or add some description on it. It was frustrating that if you search in Chinese, some words are searchable while most are not. I want to build a app to target the photos by the text in it.",
        "spotlight": "Although the UI looks simple and not so appealing, this is a application solves a real problem of mine. It's not a Toy project.",
        "problem": ["Handling the Promises in JavaScript really troubled me a lot. I was not quite familiar with the callback functions either, for I didn't encounter them in Java. I spend a large amount of time on reading materials to learn AJAX and Promises. The app should only start searching when the API calls are fuifilled. This requires a good state management", "Besides this, Google Photos API requires OAuth 2.0 authorization. It doesn't provide a API to let you search through the library, and only returns one page of item per request. To solve the problem, I use IndexedDB to store all the data from responses on the client and search through it afterwards"],
        "lesson": ["Although React.js provides Context to help the state management and I used it. It would be better if I used a state management tool as Redux"]
      },
      "illustrations": ["gpse01.png","gpse02.png", "gpse03.gif"]
    },
    {
      "title": "Church Education Website",
      "subtitle": "A small website developed for the sunday school of Zion Alliance Church",
      "image": "cew.png",
      "type": "Independent Project",
      "techs": ["React.js", "Material UI", "React Router", "RESTful API"],
      "live": "https://cew.onrender.com/",
      "repo": "https://github.com/CeruleanW/church-eduction-website",
      "content": {
        "introduction": "CEW is a static course website I built for the sunday school of Zion Alliance Church, to allow church members to access the course announcements and resources during the pandemic conveniently. It has three main pages for announcement, general courses, and a special lecture serie respectively.",
        "goal": "The UI of the existing main website was not made for navigating to and displaying various items, which is courses in this case. In fact, it was like hiding these resources in the corner. As we will be mostly interacting remotely in 2021, we need to make the online education resources more accessible",
        "spotlight": "",
        "problem": ["Requirements elicitation is the hardest part of this process. Discussing with the client is worthy but not easy. And It's also hard to confirm what data will or won't be privided, what data format should be used with non-techinal people.", "To help the communication, I drew the sketch by paper and pen to show the layout and developed mockup prototype for further discussion, both of which helped a lot for clarifying the requirements."],
        "lesson": ["I learned a lot of React Router from this project as it is my first React project requires routing to various pages, such as basic Switch, Route, and using Hooks to get URL parameters. When deploying the website, we need to redirect all requests to index.html because the site is just a Single Page Application acting like having multi-pages.", "The process of requirements specification and system design cannot be directly reflected on the end product, but it is fundamental and critical for the end product"]
      },
      "id": "eae9e67b-e921-499c-afb2-3137a9867171",
      "illustrations": ["cew01.png", "cew02.png", "cew03.png"]
    },
    {
      "title": "Landing Page - Broken Dream Caf√©",
      "subtitle": "A responsive design landing page for a non-existing restaurant, using React.js, Semantic UI React, and CSS Module",
      "image": "bc.png",
      "techs": ["React.js", "Semantic UI React", "CSS Module", "HTML", "CSS"],
      "id": "0c6d7ee9-fbca-477f-8f0d-2f1eb50283f0",
      "type": "Personal Project",
      "live": "https://ceruleanw.github.io/Broken-dream-cafe/",
      "repo": "https://github.com/CeruleanW/Broken-dream-cafe",
      "content": {
        "introduction": "A landing page implemented Responsive design, CSS animation ",
        "goal": "To learn React.js and CSS3 by creating a landing page.",
        "spotlight": "",
        "problem": ["For me, the Component-based architecture of React and the extensive use of constant is significantly different from Object-Oriented Programming nature of Java. When I first began this, I put different things here and there and don't know how to make a component reusable and isolated. As I grasp more about React.js later, I know more about how to encapsulate CSS, JSX and JavaScript functions to make the components reusable."],
        "lesson": ["Take some time on designing the architecture and testing is important. Take the advantages of appropriate UI frameworks and libraries can greatly reduce the headache."]
      },
      "illustrations": ["bc01.png", "bc02.png", "bc03.png"]
    }
  ],
  "carouselProjects": [
    {
      "title": "Plant Light Meter (placeholder)",
      "subtitle": "A mobile app measures the light intensity to help you find the appropriate location for your indoor plants",
      "image": "plm.png",
      "id": "365dc79d-45eb-48d1-ad2c-33023b029a33"
    },
    {
      "title": "Google Photos Search Enhancer",
      "subtitle": "Search phrases more than general keywords in the descriptions and filenames in your Google Photos. Support fuzzy search",
      "image": "gpse.png",
      "id": "0c6d7ee9-fbca-477f-8f0d-2f1eb50963f0"
    },
    {
      "title": "Church Education Website",
      "subtitle": "A website developed for the sunday school of Zion Alliance Church",
      "image": "cew.png",
      "id": "eae9e67b-e921-499c-afb2-3137a9867171",
      "techs": ["React.js", "Material UI", "React Router", "Render"]
    }
  ]
}
